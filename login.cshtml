@{ 
Layout = "~/Shared/Layout/_basiclayout.cshtml"; 
//Layout = "~/Shared/Layout/_mainlayout.cshtml"; 
Page.Title = "Admin login";
var username = ""; 
var password = ""; 
if(IsPost) 
{ 
username = Request["username"]; 
password = Request["password"]; 
var rememberMe = Request["rememberMe"].AsBool(); 
// Validation 
if (username.IsEmpty()) { 
ModelState.AddError("username", "Username cannot be blank."); 
} 
if (password.IsEmpty()) { 
ModelState.AddError("password", "Password cannot be blank."); 
} 
// Attempt login 
if(ModelState.IsValid) 
{ 
if(WebSecurity.Login(username, password, rememberMe)) 
{ 
    if(username=="admin" && password=="admin"){
        Response.Redirect("~/adminMain.cshtml"); 

    }
    else
    {
        Response.Redirect("~/default.cshtml"); 
    }

} 
else 
{ 
ModelState.AddFormError("Unable to log in."); 
} 
} 
} 
}

   <title>Login</title> 
<div  class="shell">
<meta charset="utf-8" /> 

<style> 
.validation-summary-errors, 
span.field-validation-error { color: #FF0000; } 
input.field-validation-error { border: 1px solid #FF0000; 
background-color: #FFCCCC; } 
</style> 


<h1 style="padding-top: 50px">Login</h1> 
@Html.ValidationSummary(true) 
<form action="login" method="post" style="padding:30px; "> 
<div style="font-size:15px !important "> 
            @Html.Label("Username: ", "username")<br /> 
            @Html.TextBox("username", username) 
            @Html.ValidationMessage("username") 
</div> 
<div style="font-size:15px !important "> 
            @Html.Label("Password: ", "password")<br /> 
            @Html.Password("password") 
            @Html.ValidationMessage("password") 
</div> 
<div style="padding: 10px 0 0 0"> 
            @Html.CheckBox("rememberMe", new { value = "true" }) 
            @Html.Label("Remember me on this computer?", "rememberMe") 
</div> 
<div style="padding: 10px 0px 0px 0px"> 
        <input type="submit" value="Login" /> 
</div> 
</form> 
    </div> 

         